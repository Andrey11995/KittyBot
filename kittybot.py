import os
import sys
import requests
import logging
import telebot
from telebot import types
from flask import Flask, request
from logging import StreamHandler
from dotenv import load_dotenv


load_dotenv()

TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN')
APP_URL = f'https://kot0bot.herokuapp.com/{TELEGRAM_TOKEN}'
API_URL = 'https://api.thecatapi.com/v1/images/search'

logger = logging.getLogger(__name__)
logger.setLevel(logging.DEBUG)
handler = StreamHandler(sys.stderr)
logger.addHandler(handler)

bot = telebot.TeleBot(TELEGRAM_TOKEN)
server = Flask(__name__)


@server.route('/' + TELEGRAM_TOKEN, methods=['POST'])
def get_message():
    json_string = request.get_data().decode('utf-8')
    update = telebot.types.Update.de_json(json_string)
    bot.process_new_updates([update])
    return '!', 200


@server.route('/')
def webhook():
    bot.remove_webhook()
    bot.set_webhook(url=APP_URL)
    return '!', 200


@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    send_cat = types.KeyboardButton('üê± –ö–û–¢–ò–ö–ò')
    markup.add(send_cat)
    try:
        name = message.from_user.first_name
        bot.reply_to(
            message,
            '–ü—Ä–∏–≤–µ—Ç, {}. –ü–æ—Å–º–æ—Ç—Ä–∏, –∫–∞–∫–æ–≥–æ –∫–æ—Ç–∏–∫–∞ —è —Ç–µ–±–µ –Ω–∞—à—ë–ª!'.format(name),
            reply_markup=markup
        )
        bot.send_photo(message.chat.id, get_new_image())
        logger.info('–§–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ')
    except Exception as error:
        logger.error(f'–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ! –û—à–∏–±–∫–∞: {error}')


@bot.message_handler(content_types=['text'])
def new_cat(message):
    try:
        if message.text == 'üê± –ö–û–¢–ò–ö–ò':
            bot.send_photo(message.chat.id, get_new_image())
            logger.info('–§–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ')
    except Exception as error:
        logger.error(f'–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ! –û—à–∏–±–∫–∞: {error}')


def get_new_image():
    try:
        response = requests.get(API_URL).json()
    except Exception as error:
        logger.warning('API –∫–æ—Ç–∏–∫–æ–≤ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç!')
        logger.error(error)
        logger.info('–ü—ã—Ç–∞–µ–º—Å—è –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Å–æ–±–∞—á–µ–∫')
        new_url = 'https://api.thedogapi.com/v1/images/search'
        response = requests.get(new_url).json()
    random_image = response[0].get('url')
    return random_image


# def new_cat(update, context):
#     try:
#         chat = update.effective_chat
#         context.bot.send_photo(chat.id, get_new_image())
#         logger.info('–§–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ')
#     except Exception as error:
#         logger.error(f'–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ! –û—à–∏–±–∫–∞: {error}')


def main():
    try:
        server.run(host='0.0.0.0', port=int(os.environ.get('PORT', 5000)))
        logger.debug('–ö–æ—Ç–æ–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω')
    except Exception as error:
        logger.critical(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞: {error}')


if __name__ == '__main__':
    main()

